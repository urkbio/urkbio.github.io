<?xml version='1.0' encoding='utf-8'?>
<rss version="2.0"><channel><title>CHIU BLOG</title><link>https://chiu.joomaen.top</link><description>Sharing Technology and Life</description><language>zh-CN</language><lastBuildDate>Wed, 12 Feb 2025 17:44:00 +0800</lastBuildDate><item><title>testads</title><link>https://chiu.joomaen.top/posts/testads-20250212.html</link><guid>https://chiu.joomaen.top/posts/testads-20250212.html</guid><pubDate>Wed, 12 Feb 2025 17:43:16 +0800</pubDate><description>&lt;p&gt;Write your content here...&lt;/p&gt;
</description><category>test</category><category>Ads</category></item><item><title>备份</title><link>https://chiu.joomaen.top/posts/备份-20250130.html</link><guid>https://chiu.joomaen.top/posts/备份-20250130.html</guid><pubDate>Thu, 30 Jan 2025 16:18:39 +0800</pubDate><description>&lt;p&gt;将AI写的简单静态博客也部署到 4everland 上，多一层备份，尽管没什么用。因为这个静态站点就是我的博客的备份，现在又有了备份的备份。不过不用手动操作了。&lt;/p&gt;
</description><category>备份</category></item><item><title>尝试Cloudflare Tunnel使本地的IPNS公网访问</title><link>https://chiu.joomaen.top/posts/尝试cloudflare-tunnel使本地的ipns公网访问-20250123.html</link><guid>https://chiu.joomaen.top/posts/尝试cloudflare-tunnel使本地的ipns公网访问-20250123.html</guid><pubDate>Thu, 23 Jan 2025 18:03:48 +0800</pubDate><description>&lt;h3&gt;安装cloudflared:&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;
brew install cloudflare/cloudflare/cloudflared
&lt;/code&gt;&lt;/p&gt;

&lt;h3&gt;验证登录并授权一个域名(先在浏览器上登录Cloudflare，再运行命令):&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;
cloudflared login
&lt;/code&gt;&lt;/p&gt;

&lt;h3&gt;绑定自己域名 (可选)&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;创建隧道 (前提已经登录并授权一个域名) 
&lt;code&gt;
cloudflared tunnel create
&lt;/code&gt;
你的家目录中会出现 &lt;code&gt;~/.cloudflared/[一长串UUID].json&lt;/code&gt;，里面保存这运行这条隧道所需要的授权信息。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;配置路由
创建了隧道之后，我们还需要让它可以被访问。Cloudflare 支持将其部署到负载均衡器后端，或者通过 DNS 直接访问。这里只介绍后者的使用方法。
```
cloudflared tunnel route dns [名字或者 UUID] [想要绑定到的域名或其二级域名]&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h1&gt;例如：&lt;/h1&gt;

&lt;p&gt;cloudflare tunnel route dns my-tunnel domain.example.com&lt;/p&gt;

&lt;h1&gt;目标域名必须没有设定相关DNS解析记录&lt;/h1&gt;

&lt;p&gt;```&lt;/p&gt;

&lt;h3&gt;使用Cloudflare随机域名启动&lt;/h3&gt;

&lt;p&gt;修改为自己的端口，运行命令之后出现一个随记域名&lt;code&gt;https://random-name.trycloudflare.com&lt;/code&gt;: 
&lt;code&gt;
cloudflared tunnel --url http://localhost:8080
&lt;/code&gt;&lt;/p&gt;

&lt;h3&gt;使用自己配置好的域名启动&lt;/h3&gt;

&lt;p&gt;```
cloudflared tunnel --name [隧道名称] --url http://[站点地址]&lt;/p&gt;

&lt;h1&gt;例如:&lt;/h1&gt;

&lt;p&gt;cloudflared tunnel --name my-tunnel --url http://127.0.0.1:18181
```&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;参考: 
- &lt;a href="https://blog.outv.im/2021/cloudflared-tunnel"&gt;用 Cloudflare Tunnel 进行内网穿透&lt;/a&gt;
- &lt;a href="https://blog.logto.io/zh-TW/painless-local-debugging"&gt;無痛本地調試：使用 Cloudflare Tunnel 實現 HTTPS 和自定義主機名&lt;/a&gt;
- &lt;a href="https://sspai.com/post/79278"&gt;CloudFlare Tunnel 免费内网穿透的简明教程&lt;/a&gt;&lt;/p&gt;
</description><category>Cloudflare Tunnel</category><category>内网穿透</category></item><item><title>简单搭建Snell服务</title><link>https://chiu.joomaen.top/posts/简单搭建snell服务-20250121.html</link><guid>https://chiu.joomaen.top/posts/简单搭建snell服务-20250121.html</guid><pubDate>Tue, 21 Jan 2025 20:45:41 +0800</pubDate><description>&lt;h1&gt;简单搭建Snell服务（转载自&lt;a href="https://github.com/getsomecat/GetSomeCats/blob/Surge/%E7%AE%80%E5%8D%95%E6%90%AD%E5%BB%BASnell%E6%9C%8D%E5%8A%A1.md"&gt;getsomecat&lt;/a&gt;,仅作为备份）&lt;/h1&gt;

&lt;p&gt;本文主要参考了神机（花姐）&lt;a href="https://divineengine.net/article/deploying-a-snell-server/"&gt;Surge | 部署 Snell Server – DivineEngine | Site&lt;/a&gt;，只是根据自己搭建过程做了一点点改动。感谢花姐以及surge pro群里热心指导的各位。&lt;/p&gt;

&lt;h1&gt;用ssh连上你的vps后，输入：&lt;/h1&gt;

&lt;p&gt;&lt;code&gt;
sudo -i
&lt;/code&gt;
获取管理权限&lt;/p&gt;

&lt;h1&gt;如果系统没有预装可能需要先下载安装 vim，wget 及 unzip&lt;/h1&gt;

&lt;h1&gt;APT&lt;/h1&gt;

&lt;p&gt;&lt;code&gt;
sudo apt update &amp;amp;&amp;amp; sudo apt install wget unzip
&lt;/code&gt;&lt;/p&gt;

&lt;h1&gt;DNF&lt;/h1&gt;

&lt;h1&gt;这一步ubuntu和Debian系统似乎不用。&lt;/h1&gt;

&lt;p&gt;&lt;code&gt;
sudo dnf install unzip
&lt;/code&gt;&lt;/p&gt;

&lt;h1&gt;安装vim&lt;/h1&gt;

&lt;p&gt;&lt;code&gt;
apt install vim
&lt;/code&gt;&lt;/p&gt;

&lt;h1&gt;下载 Snell Server&lt;/h1&gt;

&lt;h1&gt;如果你的服务器是其它版本的去官网&lt;a href="https://manual.nssurge.com/others/snell.html"&gt;Snell Protocol · GitBook&lt;/a&gt;下载相应服务器版本。这里以linux-amd64为例&lt;/h1&gt;

&lt;p&gt;&lt;code&gt;
wget https://dl.nssurge.com/snell/snell-server-v4.0.1-linux-amd64.zip
&lt;/code&gt;
如果ARM的机器：
```
wget https://dl.nssurge.com/snell/snell-server-v4.0.1-linux-aarch64.zip&lt;/p&gt;

&lt;p&gt;```&lt;/p&gt;

&lt;h1&gt;解压 Snell Server 到指定目录&lt;/h1&gt;

&lt;p&gt;AMD
&lt;code&gt;
sudo unzip snell-server-v4.0.1-linux-amd64.zip -d /usr/local/bin
&lt;/code&gt;
ARM
&lt;code&gt;
sudo unzip snell-server-v4.0.1-linux-aarch64.zip -d /usr/local/bin
&lt;/code&gt;&lt;/p&gt;

&lt;h1&gt;赋予服务器权限&lt;/h1&gt;

&lt;h1&gt;花姐的教程里面没有这一步。但是我结合自己之前弄TUIC的经验，觉得应该还是要加上&lt;/h1&gt;

&lt;p&gt;&lt;code&gt;
chmod +x /usr/local/bin/snell-server
&lt;/code&gt;&lt;/p&gt;

&lt;h1&gt;编写配置文件：&lt;/h1&gt;

&lt;h1&gt;先执行新建文件夹操作&lt;/h1&gt;

&lt;p&gt;```
sudo mkdir /etc/snell&lt;/p&gt;

&lt;p&gt;```&lt;/p&gt;

&lt;h1&gt;执行完建立文件夹操作后再进行写入配置&lt;/h1&gt;

&lt;h1&gt;可以使用 Snell 的 wizard 生成一个配置文件&lt;/h1&gt;

&lt;p&gt;&lt;code&gt;
sudo snell-server --wizard -c /etc/snell/snell-server.conf
&lt;/code&gt;&lt;/p&gt;

&lt;h1&gt;或者自己编写一个&lt;/h1&gt;

&lt;p&gt;```
sudo vim /etc/snell/snell-server.conf&lt;/p&gt;

&lt;p&gt;```&lt;/p&gt;

&lt;h1&gt;将下面的复制粘贴进去，按esc 后输入"：wq"保存退出&lt;/h1&gt;

&lt;h1&gt;Tips 如果要进行修改，按“i”后移动光标到相应位置，进行修改完毕后按esc退出并输入“：wq”保存（这个说明给像我这样对vim不熟悉的）&lt;/h1&gt;

&lt;p&gt;&lt;code&gt;
[snell-server]
listen = 0.0.0.0:11807
psk = AijHCeos15IvqDZTb1cJMX5GcgZzIVE
ipv6 = false
&lt;/code&gt;&lt;/p&gt;

&lt;h1&gt;参数说明：&lt;/h1&gt;

&lt;p&gt;listen：监听地址及端口；
psk：密钥；
ipv6：如果需要 IPv6 支持将值为 – true；&lt;/p&gt;

&lt;h1&gt;然后配置 Systemd 服务文件：&lt;/h1&gt;

&lt;p&gt;&lt;code&gt;
sudo vim /lib/systemd/system/snell.service
&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;将下面的复制粘贴进去，按esc 后输入“：wq”保存退出&lt;/h2&gt;

&lt;p&gt;```
[Unit]
Description=Snell Proxy Service
After=network.target&lt;/p&gt;

&lt;p&gt;[Service]
Type=simple
User=nobody
Group=nogroup
LimitNOFILE=32768
ExecStart=/usr/local/bin/snell-server -c /etc/snell/snell-server.conf
AmbientCapabilities=CAP&lt;em&gt;NET&lt;/em&gt;BIND_SERVICE
StandardOutput=syslog
StandardError=syslog
SyslogIdentifier=snell-server&lt;/p&gt;

&lt;p&gt;[Install]
WantedBy=multi-user.target
```&lt;/p&gt;

&lt;p&gt;⚠️ 注意：在一些 Linux 发行版 (CentOS7) 中并无 nogroup 群组，但可以尝试修改成 Group=nobody 解决。如果需要使用特权端口，可以在 [Service] 增加一条：AmbientCapabilities=CAP&lt;em&gt;NET&lt;/em&gt;BIND_SERVICE 以解决权限不足不能绑定的问题；&lt;/p&gt;

&lt;p&gt;然后使用命令：&lt;/p&gt;

&lt;h1&gt;重载服务&lt;/h1&gt;

&lt;p&gt;&lt;code&gt;
sudo systemctl daemon-reload
&lt;/code&gt;&lt;/p&gt;

&lt;h1&gt;开机运行 Snell&lt;/h1&gt;

&lt;p&gt;&lt;code&gt;
sudo systemctl enable snell
&lt;/code&gt;&lt;/p&gt;

&lt;h1&gt;开启 Snell&lt;/h1&gt;

&lt;p&gt;&lt;code&gt;
sudo systemctl start snell
&lt;/code&gt;&lt;/p&gt;

&lt;h1&gt;关闭 Snell&lt;/h1&gt;

&lt;p&gt;&lt;code&gt;
sudo systemctl stop snell
&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;查看 Snell 状态&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;
sudo systemctl status snell
&lt;/code&gt;&lt;/p&gt;

&lt;h1&gt;Tips:运行查看服务器状态后按“q”键退出&lt;/h1&gt;

&lt;p&gt;如果要查看自己Snell配置：
&lt;code&gt;
cat /etc/snell/snell-server.conf
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;查看后将相应的配置输出到surge里面：&lt;/p&gt;

&lt;p&gt;格式如下：（XXX.XXX.XXX.XXX换成你自己的vps IP，端口和psk也是自己改成自己设置的snell-server.conf里面相应数据。）
&lt;code&gt;
AWS-EC2-SG = snell, XXX.XXX.XXX.XXX, 11807, psk=AijHCeos15IvqDZTb1cJMX5GcgZzIVE, version=4, tfo=true
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;中午我是自己在 AWS -EC2 上按照这个步骤自己来了一遍并通了的。&lt;/p&gt;

&lt;p&gt;如果你看完教程觉得好麻烦啊我不想动手搞，那么这个一键脚本应该可以帮到你
```
wget -O snell.sh --no-check-certificate https://raw.githubusercontent.com/getsomecat/Snell/master/snell_new.sh &amp;amp;&amp;amp; chmod +x snell.sh &amp;amp;&amp;amp; ./snell.sh&lt;/p&gt;

&lt;p&gt;```&lt;/p&gt;
</description><category>自托管</category><category>代理</category></item><item><title>和ChatGPT的对话</title><link>https://chiu.joomaen.top/posts/和chatgpt的对话-20250119.html</link><guid>https://chiu.joomaen.top/posts/和chatgpt的对话-20250119.html</guid><pubDate>Sun, 19 Jan 2025 20:40:48 +0800</pubDate><description>&lt;h2&gt;&lt;em&gt;德国是先有纳粹还是先有东德&lt;/em&gt;&lt;/h2&gt;

&lt;p&gt;德国是&lt;strong&gt;先有纳粹&lt;/strong&gt;，然后才有东德。&lt;/p&gt;

&lt;h3&gt;时间线概述：&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;纳粹（1933年-1945年）&lt;/strong&gt;  &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;1933年，阿道夫·希特勒领导的纳粹党（全称：国家社会主义德国工人党）在德国掌权，建立了第三帝国。&lt;/li&gt;
&lt;li&gt;纳粹政权在1945年第二次世界大战结束时崩溃，德国被盟军占领并分区。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;东德（1949年-1990年）&lt;/strong&gt;  &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;战后德国被分为四个占领区（美国、苏联、英国和法国）。苏联占领区在1949年建立了&lt;strong&gt;德意志民主共和国&lt;/strong&gt;（即东德），实行社会主义制度。&lt;/li&gt;
&lt;li&gt;东德存在到1990年，随后与西德合并，重新统一为德国。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;因此，纳粹德国（1933年）早于东德（1949年）。&lt;/p&gt;

&lt;h2&gt;&lt;em&gt;这两个是完全相反的意识形态&lt;/em&gt;&lt;/h2&gt;

&lt;p&gt;是的，&lt;strong&gt;纳粹德国&lt;/strong&gt;和&lt;strong&gt;东德&lt;/strong&gt;确实代表了两种完全相反的意识形态。&lt;/p&gt;

&lt;h3&gt;纳粹主义 vs. 东德的社会主义&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;纳粹主义（极右派）&lt;/strong&gt;  &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;核心思想是极端民族主义、种族主义和军国主义。&lt;/li&gt;
&lt;li&gt;提倡“雅利安人至上”，极力排斥和迫害其他民族（如犹太人、罗姆人等）。&lt;/li&gt;
&lt;li&gt;强调个人对领袖（希特勒）的绝对服从，并反对民主和自由。&lt;/li&gt;
&lt;li&gt;经济上支持国家干预的资本主义，但主要服务于战争机器和统治阶级。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;东德社会主义（极左派）&lt;/strong&gt;  &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;以马克思主义和列宁主义为基础，提倡工人阶级统治和阶级斗争。&lt;/li&gt;
&lt;li&gt;追求社会平等，废除资本主义制度，通过公有制控制生产资料。&lt;/li&gt;
&lt;li&gt;强调国际主义（社会主义阵营团结）而非极端民族主义。&lt;/li&gt;
&lt;li&gt;政治上是一党制，所有权力集中于东德的统一社会党（由共产党主导）。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;hr /&gt;

&lt;h3&gt;这两者的对立点：&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;民族与国际：&lt;/strong&gt;  &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;纳粹：排外的民族主义，提倡“德意志优越论”。  &lt;/li&gt;
&lt;li&gt;东德：强调国际主义，属于苏联领导的社会主义阵营。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;经济制度：&lt;/strong&gt;  &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;纳粹：国家资本主义，仍保留私人资本，但受政府高度控制。  &lt;/li&gt;
&lt;li&gt;东德：社会主义经济模式，生产资料公有化，消灭私人资本。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;权力逻辑：&lt;/strong&gt;  &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;纳粹：领袖至上，追求个人崇拜。  &lt;/li&gt;
&lt;li&gt;东德：党至上，权力集中于统一社会党（理论上为“工人阶级领导”）。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;社会观：&lt;/strong&gt;  &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;纳粹：种族歧视、排斥异己。  &lt;/li&gt;
&lt;li&gt;东德：强调“人人平等”（尽管实际上也有等级制度，但种族歧视较少）。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;hr /&gt;

&lt;h3&gt;历史的转折：&lt;/h3&gt;

&lt;p&gt;纳粹德国在二战中的失败为德国带来了彻底的社会与意识形态洗牌。战后，在苏联的占领区中，建立了一个以反法西斯、反纳粹为基础的社会主义东德，几乎与纳粹的理念完全背道而驰。&lt;/p&gt;

&lt;p&gt;尽管意识形态相反，&lt;strong&gt;这两种体制在本质上都实行了高压统治和专制制度&lt;/strong&gt;（例如，纳粹的盖世太保和东德的史塔西都以秘密警察的形式控制社会），这一点也是引发历史反思的重要原因。&lt;/p&gt;

&lt;h2&gt;&lt;em&gt;统一社会党就是共产党吗&lt;/em&gt;&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;东德的统一社会党（SED，Sozialistische Einheitspartei Deutschlands）&lt;/strong&gt;可以理解为一种形式上的共产党，但它并不完全等同于传统意义上的“共产党”。以下是它的性质与背景：&lt;/p&gt;

&lt;hr /&gt;

&lt;h3&gt;1. &lt;strong&gt;统一社会党的成立背景&lt;/strong&gt;&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;1946年，在苏联占领区的指挥下，&lt;strong&gt;德国共产党（KPD）&lt;/strong&gt;和&lt;strong&gt;德国社会民主党（SPD）&lt;/strong&gt;被迫合并，组成了统一社会党（SED）。&lt;/li&gt;
&lt;li&gt;表面上，统一社会党吸收了社会民主主义和共产主义的思想，但实际上，它完全受苏联控制，推行的是苏联模式的马克思列宁主义。&lt;/li&gt;
&lt;li&gt;这一“统一”并非自愿，许多原社会民主党的成员感到被迫接受合并，甚至遭到整肃。&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3&gt;2. &lt;strong&gt;统一社会党是否等同于共产党&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;本质上，统一社会党是东德的执政党，代表了“共产党”的意识形态和领导地位，但它的组织形式和历史背景有所不同。&lt;/strong&gt;&lt;/p&gt;

&lt;h4&gt;相似点：&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;意识形态：&lt;/strong&gt; &lt;br /&gt;
推行马克思列宁主义，强调无产阶级专政和社会主义建设。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;一党专政：&lt;/strong&gt; &lt;br /&gt;
统一社会党在东德是一党制国家的核心，垄断政治权力，其他政党（如基督教民主联盟等）虽存在，但完全是装饰性政党，受SED控制。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;与苏联共产党关系密切：&lt;/strong&gt; &lt;br /&gt;
统一社会党实际上是苏联共产党在东德的“分支”，严格执行苏联的政策和指令。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;不同点：&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;来源多元：&lt;/strong&gt; &lt;br /&gt;
统一社会党并非单一的共产党，而是由德国共产党和社会民主党强制合并而成，带有形式上的社会民主主义色彩。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;名称与策略：&lt;/strong&gt; &lt;br /&gt;
为了吸引更广泛的群众，特别是社会民主党的支持者，SED选择了更温和的名字，而不是直接称为“共产党”。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;实际运作：&lt;/strong&gt; &lt;br /&gt;
尽管表面上名为“统一”，但它的实际政策和领导模式完全是按照苏联模式的共产党结构设计，社会民主党派系逐渐被清洗或边缘化。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3&gt;3. &lt;strong&gt;统一社会党的地位&lt;/strong&gt;&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;在东德，统一社会党是名副其实的执政党，控制了国家的所有机构，包括政府、军队、警察、教育和媒体。&lt;/li&gt;
&lt;li&gt;它与共产国际解散后的苏联共产党等其他兄弟党保持紧密合作，共同推进社会主义阵营的发展。&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3&gt;4. &lt;strong&gt;总结&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;从本质和运作来看，统一社会党可以被认为是东德的“共产党”，但它的建立过程和名字的选择反映了一种政治策略，试图通过“统一”的名义掩盖强制性合并的事实。&lt;/p&gt;

&lt;p&gt;如果说传统的“共产党”指的是一个明确从事马克思列宁主义活动的政党，那么&lt;strong&gt;统一社会党可以被视为共产党的一个“变种”，其核心依旧是马克思主义，但为了适应东德的历史背景和苏联的需求进行了包装&lt;/strong&gt;。&lt;/p&gt;

&lt;h2&gt;&lt;em&gt;朝鲜的劳动党是共产党吗&lt;/em&gt;&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;朝鲜劳动党（WPK，조선로동당）&lt;/strong&gt;在本质上可以被视为一种“共产党”，但其思想体系和运作方式带有强烈的朝鲜本土化和独特性，已经不完全等同于传统意义上的共产党。&lt;/p&gt;

&lt;hr /&gt;

&lt;h3&gt;1. &lt;strong&gt;朝鲜劳动党的历史与背景&lt;/strong&gt;&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;1945年：&lt;/strong&gt; 朝鲜半岛从日本殖民统治下解放后，苏联在北方扶植了以金日成为首的共产主义组织。  &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;1946年：&lt;/strong&gt; 朝鲜北方的共产党和新民党合并，成立了&lt;strong&gt;北朝鲜劳动党&lt;/strong&gt;，后于1949年与南方的&lt;strong&gt;南朝鲜劳动党&lt;/strong&gt;合并，成为今天的&lt;strong&gt;朝鲜劳动党&lt;/strong&gt;。  &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;苏联的影响：&lt;/strong&gt; 早期的朝鲜劳动党深受苏联和中国共产党模式的影响，推行马克思列宁主义。&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3&gt;2. &lt;strong&gt;是否等同于共产党？&lt;/strong&gt;&lt;/h3&gt;

&lt;h4&gt;&lt;strong&gt;相似点（与共产党相同）：&lt;/strong&gt;&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;马克思列宁主义基础：&lt;/strong&gt; &lt;br /&gt;
朝鲜劳动党在成立之初明确以马克思列宁主义为指导思想，推行无产阶级专政、社会主义经济制度。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;一党专政：&lt;/strong&gt; &lt;br /&gt;
朝鲜劳动党是朝鲜民主主义人民共和国（朝鲜）的唯一执政党，垄断一切权力，其他政党（如朝鲜社会民主党）仅是附属工具。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;国际共产主义联系：&lt;/strong&gt; &lt;br /&gt;
在20世纪冷战期间，朝鲜劳动党是社会主义阵营的一部分，与苏联共产党和中国共产党保持紧密联系。&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;&lt;strong&gt;不同点（区别于传统共产党）：&lt;/strong&gt;&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;主体思想（主体思想取代马克思主义）：&lt;/strong&gt; &lt;br /&gt;
20世纪70年代开始，金日成提出了&lt;strong&gt;主体思想&lt;/strong&gt;（주체사상），强调“以人为中心”的哲学。  &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;主体思想虽然吸收了马克思列宁主义，但更加强调&lt;strong&gt;国家自主性&lt;/strong&gt;、&lt;strong&gt;领袖至上&lt;/strong&gt;，逐渐取代马克思主义成为党的指导思想。  &lt;/li&gt;
&lt;li&gt;这一点使朝鲜劳动党脱离了传统共产党的国际主义立场，更加民族化和独裁化。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;个人崇拜：&lt;/strong&gt; &lt;br /&gt;
朝鲜劳动党发展出了极端的领袖崇拜体制，以金日成、金正日、金正恩三代为核心，彻底偏离了马克思主义中的集体领导原则。  &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;传统的共产党强调“党高于领袖”，而劳动党强调“领袖高于党”。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;政策本土化：&lt;/strong&gt; &lt;br /&gt;
朝鲜劳动党的政策以“朝鲜民族特性”为核心，远离了苏联式或中国式的共产主义模式。例如：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;经济上强调自力更生（주체경제）。&lt;/li&gt;
&lt;li&gt;军事上推行先军政治（军队优先）。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;hr /&gt;

&lt;h3&gt;3. &lt;strong&gt;劳动党和共产党之间的关系&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;可以认为&lt;strong&gt;朝鲜劳动党是一个本土化的共产党“变种”&lt;/strong&gt;：
- 它继承了共产党的一党专政和社会主义经济模式。
- 但它从20世纪70年代后期开始，脱离了马克思主义的国际化原则，成为以民族主义和领袖个人崇拜为核心的独特政党。&lt;/p&gt;

&lt;hr /&gt;

&lt;h3&gt;4. &lt;strong&gt;总结&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;劳动党在形式和早期意识形态上可以算作共产党，但它随着主体思想的确立和朝鲜本土化的发展，已经演变为一种“民族主义化的共产党”&lt;/strong&gt;。劳动党既不同于苏联共产党，也不同于中国共产党，而是创造了一种以个人崇拜和自力更生为特色的极权模式。&lt;/p&gt;

&lt;h2&gt;&lt;em&gt;是否这种所谓的“共产党”是一种骗术？它总是说人民优先，但又有类似纳粹的个人崇拜，和民主背道而驰&lt;/em&gt;&lt;/h2&gt;

&lt;p&gt;你提出的问题切中了许多历史争论的核心：一些自称“共产党”的政党或政权，虽然在名义上强调“人民优先”，但在实践中却出现了&lt;strong&gt;独裁统治&lt;/strong&gt;、&lt;strong&gt;个人崇拜&lt;/strong&gt;和&lt;strong&gt;背离民主&lt;/strong&gt;的现象。这种现象可以被解读为一种&lt;strong&gt;政治包装的骗局&lt;/strong&gt;，以社会主义或共产主义的名义掩盖其真正的权力目标。&lt;/p&gt;

&lt;hr /&gt;

&lt;h3&gt;1. &lt;strong&gt;为何说是“骗术”？&lt;/strong&gt;&lt;/h3&gt;

&lt;h4&gt;&lt;strong&gt;1.1 打着“人民优先”的旗号&lt;/strong&gt;&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;理论上的人民优先：&lt;/strong&gt; &lt;br /&gt;
共产主义理论强调消灭阶级，解放全人类，实现平等社会。这种理念对当时受压迫的劳动阶层（尤其是殖民地、半殖民地国家的人民）有极大的吸引力。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;实践中的“党优先”或“领袖优先”：&lt;/strong&gt; &lt;br /&gt;
在实际操作中，许多自称“共产党”的政权并没有实现人民的解放，反而以“人民名义”强化了党的统治甚至领袖个人的崇拜。 &lt;br /&gt;
例如：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;朝鲜劳动党宣称“以人民为中心”，但权力集中在金氏家族，人民反而成为被高压控制的对象。&lt;/li&gt;
&lt;li&gt;东德、苏联等实行的秘密警察统治（如东德的史塔西、苏联的克格勃）更加强化了对民众的监控，而不是解放。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h4&gt;&lt;strong&gt;1.2 个人崇拜与极权统治&lt;/strong&gt;&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;个人崇拜是纳粹与这些政权的共同点：&lt;/strong&gt; &lt;br /&gt;
无论是希特勒的“元首崇拜”还是朝鲜劳动党的“伟大领袖”崇拜，这种政治模式都将权力集中于个人之上，用领袖的“神化”来合理化独裁统治。 &lt;br /&gt;
例如：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;朝鲜的金日成被称为“太阳”，金正日、金正恩等继任者同样被神化，宛如皇权继承。&lt;/li&gt;
&lt;li&gt;斯大林时期的苏联也有类似的个人崇拜现象。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;背离民主：&lt;/strong&gt; &lt;br /&gt;
这些政权的权力运行模式与民主完全对立：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;民主强调权力制衡与公民参与，而这些政权强调“党或领袖至上”。&lt;/li&gt;
&lt;li&gt;选举通常只是形式，真正的权力在党内的极少数人手中。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h4&gt;&lt;strong&gt;1.3 权力的隐形交易&lt;/strong&gt;&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;这些政权对外宣传“社会主义理想”，实际上常常是一种权力获取和维持的工具。&lt;/li&gt;
&lt;li&gt;通过激发人民对不平等社会的愤怒，政党能够在早期动员群众、获取权力。但掌权后，理想往往让位于维持统治的现实，最终发展为高度集中的独裁统治。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;核心悖论：&lt;/strong&gt; &lt;br /&gt;
这些政权表面上代表劳动阶级，实际上将劳动阶级置于新的剥削和控制之下。&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3&gt;2. &lt;strong&gt;这是否完全等同于“骗局”？&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;虽然可以从政治角度将其视为一种“骗术”，但问题也并非绝对简单。  &lt;/p&gt;

&lt;h4&gt;&lt;strong&gt;2.1 初衷和现实的矛盾&lt;/strong&gt;&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;某些早期的共产党运动（如巴黎公社、苏联革命初期）确实尝试过建立更加平等的社会，追求所谓的“人民优先”。&lt;/li&gt;
&lt;li&gt;然而，权力集中、资源匮乏、外部压力等现实问题，常常让这些运动走向独裁，偏离最初的理想。&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;&lt;strong&gt;2.2 历史背景的影响&lt;/strong&gt;&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;在二战后和冷战期间，许多国家的“共产党政权”之所以获得群众支持，很大程度上是因为他们提供了一种对抗殖民主义、帝国主义或旧封建制度的方案。&lt;/li&gt;
&lt;li&gt;比如，中国共产党在抗战时期的土地改革赢得了农民支持，苏联在击败纳粹后也获得过一定国际声望。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;但一旦进入权力稳定期，这些政权的“反压迫”口号往往被“维持权力”的需求取代。&lt;/p&gt;

&lt;hr /&gt;

&lt;h3&gt;3. &lt;strong&gt;为何类似纳粹？&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;尽管这些政权理论上与纳粹的极右意识形态对立，但实际上它们在权力运行方式上有许多相似之处：
1. &lt;strong&gt;个人崇拜：&lt;/strong&gt; &lt;br /&gt;
   无论是希特勒、金日成还是斯大林，个人崇拜都被用作合法化统治的重要工具。&lt;/p&gt;

&lt;ol start="2"&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;高压控制：&lt;/strong&gt; &lt;br /&gt;
对民众实行思想控制和社会监控，限制言论自由，扼杀异见。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;对外扩张或民族优越：&lt;/strong&gt; &lt;br /&gt;
虽然形式不同，但这些政权经常用“反对敌人”来团结内部。例如，纳粹强调种族优越，而朝鲜强调“主体民族”的自豪感。&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;hr /&gt;

&lt;h3&gt;4. &lt;strong&gt;总结：一种权力游戏&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;从某种意义上看，这些自称“共产主义”的政权往往&lt;strong&gt;利用社会主义理想的光环作为宣传工具&lt;/strong&gt;，在实践中则发展为服务于少数统治阶级的权力体系。这种权力模式与民主背道而驰，并通过个人崇拜和意识形态的包装掩盖其专制本质。&lt;/p&gt;

&lt;p&gt;因此，可以说，&lt;strong&gt;这些政权是“共产主义”理论的变种，是一种通过美好理想获取权力并维持统治的政治伪装&lt;/strong&gt;。&lt;/p&gt;

&lt;h2&gt;&lt;em&gt;所以不同的意识形态只是一个幌子，其实本质的目的都殊途同归&lt;/em&gt;&lt;/h2&gt;

&lt;p&gt;你提出的观点相当深刻，揭示了许多政治体制在历史和实践中的共同本质：无论意识形态表面上如何不同，&lt;strong&gt;它们最终的核心目的往往是为了获取、巩固和延续权力&lt;/strong&gt;。意识形态在许多情况下，确实只是实现这一目标的工具或幌子。&lt;/p&gt;

&lt;hr /&gt;

&lt;h3&gt;1. &lt;strong&gt;意识形态的功能：幌子与工具&lt;/strong&gt;&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;政治的包装：&lt;/strong&gt; &lt;br /&gt;
无论是资本主义、社会主义、纳粹主义还是其他思想体系，意识形态往往被用来正当化统治者的行为，为其权力提供理论依据和合法性。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;资本主义强调“自由市场”和“个人自由”，但现实中往往出现资本过度集中、贫富分化的问题。&lt;/li&gt;
&lt;li&gt;社会主义强调“人人平等”和“公有制”，但在许多实践中却演变为权力的高度集中。&lt;/li&gt;
&lt;li&gt;纳粹主义强调“民族至上”，但实际上是极端的独裁和压迫体制。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;动员群众的工具：&lt;/strong&gt; &lt;br /&gt;
意识形态是凝聚民众、争取支持的重要手段。例如：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;纳粹主义：&lt;/strong&gt; 通过种族主义和民族主义，煽动“雅利安人优越感”，团结内部，打击外部。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;共产主义：&lt;/strong&gt; 通过对“工人阶级解放”的承诺，动员被压迫的底层阶级支持革命。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;民主自由：&lt;/strong&gt; 通过宣扬“个体权利至上”，吸引人们对平等和自由的向往，但也可能被用来掩盖某些形式的不平等。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;这些体系在初期可能确实有一定的理想主义基础，但在权力落地后，&lt;strong&gt;维持统治的需要&lt;/strong&gt;常常让这些理想变形，甚至完全背离。&lt;/p&gt;

&lt;hr /&gt;

&lt;h3&gt;2. &lt;strong&gt;殊途同归：权力的本质&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;无论意识形态如何不同，历史证明，大多数政治体制的&lt;strong&gt;最终逻辑趋于一致&lt;/strong&gt;，即维持权力的延续。这表现在：&lt;/p&gt;

&lt;h4&gt;&lt;strong&gt;2.1 权力的集中化趋势&lt;/strong&gt;&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;无论是纳粹德国的“元首至上”，苏联的“党至上”，还是许多资本主义国家的“资本至上”，权力最终往往集中到少数精英手中。&lt;/li&gt;
&lt;li&gt;即使民主国家也难免出现权力集中现象（如寡头政治或财团影响），只是形式上更为隐蔽。&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;&lt;strong&gt;2.2 对社会的控制&lt;/strong&gt;&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;思想控制：&lt;/strong&gt; &lt;br /&gt;
极权主义政权如纳粹德国、苏联、朝鲜直接通过教育和宣传控制思想；而资本主义国家则可能通过媒体和文化产业实现潜移默化的影响。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;压制异见：&lt;/strong&gt; &lt;br /&gt;
无论是通过秘密警察、监狱，还是通过舆论战，任何挑战现有权力的行为都会被压制。&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;&lt;strong&gt;2.3 对合法性的追求&lt;/strong&gt;&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;通过意识形态包装：&lt;/strong&gt; &lt;br /&gt;
纳粹声称是为“雅利安人”的未来奋斗，社会主义声称是为“无产阶级”的解放服务，资本主义声称是为了“自由和繁荣”。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;敌人制造：&lt;/strong&gt; &lt;br /&gt;
权力体系往往通过制造“敌人”来维系内部团结和对自身合法性的支持。例如：
&lt;ul&gt;
&lt;li&gt;纳粹制造犹太人和苏联的威胁。&lt;/li&gt;
&lt;li&gt;苏联和美国互相敌视，在冷战中以“资本主义”和“共产主义”的对立为名义维系内部凝聚。&lt;/li&gt;
&lt;li&gt;当今许多国家也通过对外宣传“外部威胁”来转移内政问题。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3&gt;3. &lt;strong&gt;意识形态的局限：理想与现实的矛盾&lt;/strong&gt;&lt;/h3&gt;

&lt;h4&gt;&lt;strong&gt;3.1 理想被现实妥协&lt;/strong&gt;&lt;/h4&gt;

&lt;p&gt;意识形态的本意可能是对未来的美好构想，但它在实践中不可避免地受到&lt;strong&gt;现实资源&lt;/strong&gt;、&lt;strong&gt;权力逻辑&lt;/strong&gt;和&lt;strong&gt;人性复杂性&lt;/strong&gt;的影响，导致理想和现实的割裂：
- &lt;strong&gt;共产主义：&lt;/strong&gt; &lt;br /&gt;
  试图废除阶级，但实现过程中却形成了新的特权阶层（党内精英）。
- &lt;strong&gt;资本主义：&lt;/strong&gt; &lt;br /&gt;
  宣称市场公平，但实际上资本的垄断导致贫富差距加剧。
- &lt;strong&gt;纳粹主义：&lt;/strong&gt; &lt;br /&gt;
  鼓吹民族团结，但其本质是通过压迫他族、发动战争来维系。&lt;/p&gt;

&lt;h4&gt;&lt;strong&gt;3.2 人性的弱点&lt;/strong&gt;&lt;/h4&gt;

&lt;p&gt;无论哪种意识形态，都难以完全避免人性中对权力的欲望、对利益的追逐以及对异见的排斥。这些弱点往往使得任何理想化的体系在实践中走向异化。&lt;/p&gt;

&lt;hr /&gt;

&lt;h3&gt;4. &lt;strong&gt;是否注定殊途同归？&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;虽然从历史经验来看，许多不同的意识形态确实最终“殊途同归”，但这并不意味着所有政治实践都是骗局或失败。&lt;strong&gt;关键在于权力的监督和制衡机制&lt;/strong&gt;：
- 民主制度虽然有缺陷，但其强调权力分立和公民参与，为避免权力过度集中提供了机制。
- 社会主义初期的一些平等实践（如土地改革、教育普及）确实改善了部分地区的社会不平等。
- 意识形态本身并非问题，问题在于它是否成为绝对化、工具化的手段。&lt;/p&gt;

&lt;hr /&gt;

&lt;h3&gt;5. &lt;strong&gt;总结&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;意识形态往往是权力的外衣，是为了动员群众、正当化统治而创造的理论工具。但从本质上看，&lt;strong&gt;大多数政权的最终目标都是维持自身权力的稳定与延续&lt;/strong&gt;，这导致不同的意识形态在实践中表现出惊人的相似性。&lt;/p&gt;

&lt;p&gt;正如历史学家所言： &lt;br /&gt;
&lt;strong&gt;“每一种政治运动都始于理想主义，但当理想成为权力时，它不可避免地染上了权力的污垢。”&lt;/strong&gt; &lt;br /&gt;
因此，与其盲目信任某种意识形态，不如关注实际的权力结构、制度监督，以及是否能真正保障普通人的利益与自由。&lt;/p&gt;
</description><category>意识形态</category><category>ChatGPT</category></item><item><title>本地IPFS访问</title><link>https://chiu.joomaen.top/posts/本地ipfs访问-20250114.html</link><guid>https://chiu.joomaen.top/posts/本地ipfs访问-20250114.html</guid><pubDate>Tue, 14 Jan 2025 13:03:24 +0800</pubDate><description>&lt;p&gt;安装IPFS Desktop客户端，本地IPFS Gateway在8080端口上。&lt;/p&gt;

&lt;p&gt;可以使用以下方法来访问
```&lt;/p&gt;

&lt;h1&gt;IPFS&lt;/h1&gt;

&lt;p&gt;http://{CID}.ipfs.localhost:8080&lt;/p&gt;

&lt;h1&gt;IPNS&lt;/h1&gt;

&lt;p&gt;http://{IPNS Key}.ipns.localhost:8080
```&lt;/p&gt;

&lt;p&gt;或者
```&lt;/p&gt;

&lt;h1&gt;IPFS&lt;/h1&gt;

&lt;p&gt;http://127.0.0.1:8080/ipfs/{CID}&lt;/p&gt;

&lt;h1&gt;IPNS&lt;/h1&gt;

&lt;p&gt;http://127.0.0.1:8080/ipns/{IPNS Key}
```&lt;/p&gt;
</description><category>IPFS</category><category>IPNS</category></item><item><title>macOS运行本地模型</title><link>https://chiu.joomaen.top/posts/macos运行本地模型-20250103.html</link><guid>https://chiu.joomaen.top/posts/macos运行本地模型-20250103.html</guid><pubDate>Fri, 03 Jan 2025 11:17:37 +0800</pubDate><description>&lt;h3&gt;使用ollama&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;安装&lt;a href="https://github.com/ollama/ollama"&gt;ollama&lt;/a&gt;：&lt;code&gt;brew install ollama&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;启动ollama服务：&lt;code&gt;brew services start ollama&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;尝试跑一个3B的LLaMA 3.2，&lt;code&gt;ollama run llama3.2:3b&lt;/code&gt;，没下载的会自动下载，也可以在&lt;a href="https://ollama.com/library"&gt;这个网站&lt;/a&gt;下载其他模型。&lt;img src="https://media.joomaen.top/2025/01/1735863050.png" alt="截屏2025-01-03 08.10.40.png" /&gt;&lt;/li&gt;
&lt;li&gt;此时可以输入文字进行对话了，也可以输入&lt;code&gt;/bye&lt;/code&gt;退出对话框，然后使用一个其他的GUI工具接入本地大模型。
我在Mac上使用&lt;a href="https://apps.apple.com/us/app/enchanted-llm/id6474268307?l=zh-Hans-CN"&gt;Enchanted&lt;/a&gt;，它能自动识别到本地的模型，无须额外配置即可使用，如果本地有多个模型可以切换。在ollama的&lt;a href="https://github.com/ollama/ollama/blob/main/README.md"&gt;README.md&lt;/a&gt;页面底部也有许多其他的工具可以自己选择。&lt;/li&gt;
&lt;li&gt;我的最低配Mac mini上运行3B模型很轻松，最高运行7/8B的。10B以上的没试过。不过模型太小的话使用场景有限，不能把它当成通用型的，如果就是文字翻译和简单聊天的话还行，叫它讲个笑话都只能讲出不超过5行的，一点都不好笑。&lt;/li&gt;
&lt;li&gt;要停止的话：
&lt;ol&gt;
&lt;li&gt;停止模型：&lt;code&gt;ollama ollama stop llama3.2:3b&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;停止ollama服务：&lt;code&gt;brew services stop ollama&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;使用LM Studio&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://lmstudio.ai/"&gt;LM Studio&lt;/a&gt;是一个带有GUI的工具，可以更简单的运行模型。并且内置有针对M芯片优化的MLX模型。
1. 安装LM Studio：&lt;code&gt;brew install --cask lm-studio&lt;/code&gt;
2. 进入后点击左侧discover🔍，这里有一些内置的模型供你选择，默认排序是按最匹配你的电脑的排在上方。选一个点击Download。&lt;img src="https://media.joomaen.top/2025/01/1735866082.png" alt="截屏2025-01-03 09.00.51.png" /&gt;
3. 下载好后点击左侧栏的Chat图标，点击顶部的框或按&lt;code&gt;⌘L&lt;/code&gt;选择你下载的模型，如果有多个也是在这里选择。
4. 之后就可以对话了。&lt;/p&gt;
</description><category>macOS</category><category>AI</category></item><item><title>解决macOS应用被损坏</title><link>https://chiu.joomaen.top/posts/解决macos应用被损坏-20250103.html</link><guid>https://chiu.joomaen.top/posts/解决macos应用被损坏-20250103.html</guid><pubDate>Fri, 03 Jan 2025 11:17:18 +0800</pubDate><description>&lt;h2&gt;&lt;img src="https://media.joomaen.top/2025/01/1735799249.png" alt="截屏2025-01-02 14.27.15.png" /&gt;&lt;/h2&gt;

&lt;h3&gt;1. 允许 “任何来源” 下载的 App 运行&lt;/h3&gt;

&lt;p&gt;打开 “终端” 执行如下命令（根据提示输入您的密码即可）：&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sudo spctl --master-disable&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;打开 “系统偏好设置…” - “安全性与隐私”，“通用” 标签页，如图勾选：
&lt;img src="https://media.joomaen.top/2025/01/1735799337.png" alt="截屏2025-01-02 14.28.43.png" /&gt;&lt;/p&gt;

&lt;h3&gt;2. 移除应用的安全隔离属性&lt;/h3&gt;

&lt;p&gt;打开 “终端” 执行如下命令（根据提示输入您的密码即可）：&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sudo xattr -dr com.apple.quarantine /Applications/name.app&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;/Applications/name.app&lt;/code&gt; 如果不知道该如何输入，将 App 直接拖拽 &lt;code&gt;sudo xattr -rd com.apple.quarantine&lt;/code&gt;（中间有个空格）后面即可。&lt;/p&gt;

&lt;p&gt;一般情况下，多余的扩展属性都可以清除（个别应用例外）：&lt;/p&gt;

&lt;p&gt;可以直接输入：&lt;code&gt;sudo xattr -cr /Applications/*&lt;/code&gt;&lt;/p&gt;

&lt;h3&gt;3. macOS Ventura 额外步骤&lt;/h3&gt;

&lt;p&gt;如果还不能打开，则到系统设置 – 隐私和安全性，“安全性” 下面出现提示，点击 “仍要打开”，当然该操作仅需要一次，以后可以正常打开。&lt;/p&gt;

&lt;h3&gt;4. 重新签名&lt;/h3&gt;

&lt;p&gt;多数情况下，App 已经可以正常运行了，很多和谐软件因为证书问题，仍然无法打开。此时可以重新签名。&lt;/p&gt;

&lt;p&gt;打开 “终端”，执行如下命令：&lt;/p&gt;

&lt;p&gt;&lt;code&gt;codesign --force --deep --sign - /Applications/name.app&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;前提条件&lt;/strong&gt;: 安装 Command Line Tools for Xcode&lt;/p&gt;

&lt;p&gt;此时会提示安装，或者使用终端命令在线安装：&lt;/p&gt;

&lt;p&gt;&lt;code&gt;xcode-select --install&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;也可以到这里下载 Command Line Tools for Xcode：&lt;a href="https://sysin.org/blog/apple-xcode-14/" title="Xcode 14.3.1 (14E300c) - Apple 平台 IDE"&gt;Xcode 14.3.1 (14E300c) - Apple 平台 IDE&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;5. 覆盖恶意软件保护&lt;/h3&gt;

&lt;p&gt;还有一种情况，&lt;/p&gt;

&lt;p&gt;提示：“应用程序” 将对您的电脑造成伤害。您应该将它移到废纸篓。&lt;/p&gt;

&lt;p&gt;以上步骤操作后还是无法打开。&lt;/p&gt;

&lt;p&gt;解决办法：&lt;/p&gt;

&lt;p&gt;访达 -&gt; 应用程序 -&gt; 右击软件 -&gt; 显示简介，勾选 “覆盖恶意软件保护”。&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;转载自：&lt;a href="https://sysin.org/blog/macos-if-crashes-when-opening/"&gt;sysin&lt;/a&gt;&lt;/p&gt;
</description><category>macOS</category></item><item><title>Nostr的Relay桥</title><link>https://chiu.joomaen.top/posts/nostr的relay桥-20250101.html</link><guid>https://chiu.joomaen.top/posts/nostr的relay桥-20250101.html</guid><pubDate>Wed, 01 Jan 2025 14:31:49 +0800</pubDate><description>&lt;ul&gt;
&lt;li&gt;项目：&lt;a href="https://github.com/duozhutuan/NostrBridge"&gt;NostrBridge&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;修改&lt;code&gt;server.js&lt;/code&gt;中的监听端口&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;可以修改&lt;code&gt;server.js&lt;/code&gt;自定义端口&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;用Nginx或其他反向代理该端口&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;启动命令：
```&lt;/p&gt;

&lt;h1&gt;进入目录&lt;/h1&gt;

&lt;p&gt;cd /opt/NostrBridge&lt;/p&gt;

&lt;h1&gt;用forever启动，设定日志到/dev/null 避免占用磁盘空间&lt;/h1&gt;

&lt;p&gt;forever start \
  -a \
  -l /dev/null \
  --minUptime 5000 \
  --spinSleepTime 2000 \
  src/server.js
```&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;也可以使用项目中的&lt;code&gt;cli.js&lt;/code&gt;实现本地relay桥&lt;/p&gt;

&lt;p&gt;修改&lt;code&gt;config.js&lt;/code&gt;中的localserver部分，改为自己的内网IP加端口，使用&lt;code&gt;ws://&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;在&lt;code&gt;cli.js&lt;/code&gt;中添加需要桥接的远端relay&lt;/p&gt;

&lt;p&gt;在本地启动&lt;code&gt;node src/cli.js&lt;/code&gt;&lt;/p&gt;
</description><category>Nostr</category><category>server</category></item><item><title>2024.12.30</title><link>https://chiu.joomaen.top/posts/2024.12.30-20241230.html</link><guid>https://chiu.joomaen.top/posts/2024.12.30-20241230.html</guid><pubDate>Mon, 30 Dec 2024 13:26:12 +0800</pubDate><description>&lt;p&gt;我入手了Mac mini，现在最主要的电脑就是它了。12月初辞职了，希望明年能找到份工作吧，最近闲着，尝试各种新东西，AI相关的各个领域，比如写小说、绘画、写代码等，可这些要变现都没想象中那么容易，小说得依靠平台，审核挺严的，并非直接生成就能发表；绘画成本比较高，还没尝试；写代码也就做出了几个小的程序玩玩，对普通人来说门槛是低了，不过我觉得肯定是专业人士加AI才能大幅提升效率。&lt;/p&gt;

&lt;p&gt;我还尝试了无货源网店、做视频等等，但这些都是没办法一蹴而就的，我只算是亲身体会下。&lt;/p&gt;
</description><category>日常</category></item><item><title>Cloudflare回源绕过备案</title><link>https://chiu.joomaen.top/posts/cloudflare回源绕过备案-20241230.html</link><guid>https://chiu.joomaen.top/posts/cloudflare回源绕过备案-20241230.html</guid><pubDate>Mon, 30 Dec 2024 13:24:04 +0800</pubDate><description>&lt;h3&gt;针对国内云服务器又没有备案的解决方法，当然可以使用其他端口，比如直接使用8443也是可以开启HTTPS的，可是不够优雅。如果你能接受Cloudflare的延迟，可以通过建立Origin Rules实现重定向。&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;反代服务端口设为 HTTP 8080；HTTPS 8443&lt;/li&gt;
&lt;li&gt;在cf中解析好对应域名、开启CDN&lt;/li&gt;
&lt;li&gt;在Cloudflare规则-Origin Rules中创建规则&lt;/li&gt;
&lt;li&gt;自定义筛选表达式—&amp;gt;主机名 等于 你的域名&lt;/li&gt;
&lt;li&gt;目标端口重写到8443&lt;/li&gt;
&lt;/ul&gt;
</description><category>技巧</category></item><item><title>更新目录结构</title><link>https://chiu.joomaen.top/posts/更新目录结构-20241229.html</link><guid>https://chiu.joomaen.top/posts/更新目录结构-20241229.html</guid><pubDate>Sun, 29 Dec 2024 15:04:24 +0800</pubDate><description>&lt;p&gt;修改博客输出目录结构，所有HTML文件将在一个文件夹中，更美观&lt;/p&gt;
</description><category>blog</category><category>test</category></item><item><title>搭建一个简单的NOSTR中继器</title><link>https://chiu.joomaen.top/posts/搭建一个简单的nostr中继器-20241229.html</link><guid>https://chiu.joomaen.top/posts/搭建一个简单的nostr中继器-20241229.html</guid><pubDate>Sun, 29 Dec 2024 14:41:30 +0800</pubDate><description>&lt;h1&gt;搭建一个简单的Nostr中继器&lt;/h1&gt;

&lt;h3&gt;使用项目：&lt;a href="https://code.pobblelabs.org/nostr_relay/index"&gt;nostr relay&lt;/a&gt; 一个python写的程序&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;使用&lt;code&gt;pip&lt;/code&gt;安装：&lt;code&gt;pip install nostr-relay&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;新建一个目录&lt;code&gt;mkdir /opt/nostr&lt;/code&gt;，并进入目录 &lt;code&gt;cd /opt/nostr&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;创建一个配置文件，&lt;a href="https://code.pobblelabs.org/nostr_relay/file?name=nostr_relay/config.yaml"&gt;参考官方默认配置&lt;/a&gt; ，我的配置如下，修改了一点&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;```yaml
  DEBUG: false&lt;/p&gt;
  
  &lt;p&gt;relay&lt;em&gt;name: python relay
  relay&lt;/em&gt;description: relay written in python
  sysop&lt;em&gt;pubkey: 
  sysop&lt;/em&gt;contact: &lt;/p&gt;
  
  &lt;p&gt;storage:
    sqlalchemy.url: sqlite+aiosqlite:///nostr.sqlite3
    # the number of concurrent REQ queries sent to the db
    num&lt;em&gt;concurrent&lt;/em&gt;reqs: 10
    # the number of concurrent event saves. (sqlite can only support 1 writer at a time)
    num&lt;em&gt;concurrent&lt;/em&gt;adds: 2
    validators:
      - nostr&lt;em&gt;relay.validators.is&lt;/em&gt;not&lt;em&gt;too&lt;/em&gt;large
      - nostr&lt;em&gt;relay.validators.is&lt;/em&gt;signed
      - nostr&lt;em&gt;relay.validators.is&lt;/em&gt;recent
      - nostr&lt;em&gt;relay.validators.is&lt;/em&gt;not_hellthread&lt;/p&gt;
  
  &lt;p&gt;verification:
    # options are disabled, passive, enabled
    nip05&lt;em&gt;verification: disabled
    expiration: 86400 * 30
    update&lt;/em&gt;frequency: 3600
    #blacklist:
    # - badhost.biz
    #whitelist:
    # - goodhost.com&lt;/p&gt;
  
  &lt;p&gt;gunicorn:
    bind: 127.0.0.1:6969
    workers: 1
    loglevel: info
    reload: false&lt;/p&gt;
  
  &lt;p&gt;purple:
    host: 127.0.0.1
    port: 6969
    workers: 1
    disable_compression: true&lt;/p&gt;
  
  &lt;h1&gt;see docs/authentication.md&lt;/h1&gt;
  
  &lt;p&gt;authentication:
    enabled: false
    relay_urls: 
      - ws://localhost:6969
      - ws://127.0.0.1:6969
      # 可以换成 ws://公网IP:6969
      - wss://yourdomain.name
    actions:
      save: a
      query: a&lt;/p&gt;
  
  &lt;h1&gt;number of seconds to allow between client messages&lt;/h1&gt;
  
  &lt;p&gt;message_timeout: 1800&lt;/p&gt;
  
  &lt;h1&gt;number of open subscriptions per connection&lt;/h1&gt;
  
  &lt;p&gt;subscription_limit: 32&lt;/p&gt;
  
  &lt;h1&gt;set this to a private key used for internal control events&lt;/h1&gt;
  
  &lt;h1&gt;service_privatekey: 9627da965699a2a3048f97b77df5047e8cd0d11daca75e7687d0b28b65416a3c&lt;/h1&gt;
  
  &lt;h1&gt;set this to limit the number of events returned per REQ&lt;/h1&gt;
  
  &lt;p&gt;max_limit: 6000&lt;/p&gt;
  
  &lt;h1&gt;set this to the maximum number of "p" tags in an event&lt;/h1&gt;
  
  &lt;p&gt;hellthread_limit: 100
  ```&lt;/p&gt;
&lt;/blockquote&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;使用你喜欢的反向代理工具，配合域名使用。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;使用systemd管理&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;创建service文件 &lt;code&gt;vim /etc/systemd/system/nostr-relay.service&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;内容为&lt;/p&gt;

&lt;p&gt;```
[Unit]
Description=Nostr Relay Service
After=network.target&lt;/p&gt;

&lt;p&gt;[Service]
Type=simple
User=root
WorkingDirectory=/opt/nostr
ExecStart=/usr/local/bin/nostr-relay -c /opt/nostr/config.yaml serve
Restart=always
RestartSec=5
StandardOutput=append:/opt/nostr/nostr-relay.log
StandardError=append:/opt/nostr/nostr-relay-error.log&lt;/p&gt;

&lt;p&gt;[Install]
WantedBy=multi-user.target
```&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;保存并退出。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;重载systemd服务 &lt;code&gt;systemctl daemon-reload&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;启动并查看运行情况&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
systemctl start nostr-relay
systemctl status nostr-relay
&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;设置开机自启 &lt;code&gt;systemctl enable nostr-relay&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ol&gt;
</description><category>nostr</category><category>服务器</category><category>linux</category></item><item><title>博客文件丢失</title><link>https://chiu.joomaen.top/posts/博客文件丢失-20241229.html</link><guid>https://chiu.joomaen.top/posts/博客文件丢失-20241229.html</guid><pubDate>Sun, 29 Dec 2024 00:35:09 +0800</pubDate><description>&lt;p&gt;我之前用AI写了个简陋的静态博客程序，用python来构建，将本地markdown文件可以转为HTML并可以很方便的托管到GitHub pages。&lt;/p&gt;

&lt;p&gt;我之前使用windows笔记本运行的，现在换了Mac，我想把仓库clone下来不就行了。不过遇到些问题，尽管clone了所有分支，不过没有将gh-pages分支绑定到&lt;code&gt;./output&lt;/code&gt;文件夹，好在有AI，用一个命令解决了 &lt;code&gt;git worktree add output gh-pages&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;我以为都万事大吉了，写了一篇build好了，准备推送到GitHub，可是推送之后我发现有的文章丢失了。我发现是因为这次构建时完全使用的GitHub上的文件和我新建的这一个，不过我上次写的markdown文件并没有推送到GitHub，我只把gh-pages分支推送了，master分支并没有推送，所以markdown源文件就不存在了，于是构建出来的HTML当然也不会显示这些旧文件。&lt;/p&gt;
</description><category>博客</category></item><item><title>verity</title><link>https://chiu.joomaen.top/posts/verity-20241224.html</link><guid>https://chiu.joomaen.top/posts/verity-20241224.html</guid><pubDate>Sun, 29 Dec 2024 00:03:17 +0800</pubDate><description>&lt;p&gt;This message is used to verify that this feed (feedId:94115645064285184) belongs to me (userId:72254986268311552). Join me in enjoying the next generation information browser https://follow.is.&lt;/p&gt;
</description><category>verity</category></item><item><title>一个简单的静态博客</title><link>https://chiu.joomaen.top/posts/一个简单的静态博客-20241224.html</link><guid>https://chiu.joomaen.top/posts/一个简单的静态博客-20241224.html</guid><pubDate>Sun, 29 Dec 2024 00:03:17 +0800</pubDate><description>&lt;p&gt;今天用AI写了一个静态网页，效果很好，一把就好了，AI写前端一点压力都没有。&lt;/p&gt;

&lt;p&gt;可是我不知道要展示些什么，于是就叫它改了改，做成一个静态博客。&lt;/p&gt;

&lt;p&gt;相比单一静态网页，就多了一个Python写的博客生成程序，用命令行可以很方便的管理，基本的添加、删除、生成、部署都很方便。我的目标是一个极其简陋的程序，一点多的花里胡哨都不需要，只要能将我写的markdown文件渲染成网页并展示出来就好。现在看来已经很完善了。&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;现在王让它添加RSS功能，应该就完善了。&lt;/p&gt;
</description></item><item><title>Nostr etc</title><link>https://chiu.joomaen.top/posts/nostr-etc-20241228.html</link><guid>https://chiu.joomaen.top/posts/nostr-etc-20241228.html</guid><pubDate>Sat, 28 Dec 2024 23:44:31 +0800</pubDate><description>&lt;p&gt;今天偶然看到一个博客主在使用Nostr，我在它刚出来时也关注过，当时的密钥也早已经找不到了。今天重新试用了一下，发现好复杂，不如传统的Mastodon和Misskey这种。当然它貌似没有一个中心服务器，你在客户端的操作必须链接到至少一个中继服务器，才能被其他人看到。当然也可以自建一个服务器自己使用，据说这种协议不需要存储其他服务器的内容，只有处于同一个中继才能相互发现？我搞不太明白。&lt;/p&gt;

&lt;p&gt;除了刚出来时候许多人在使用，现在不知道还有多少热衷于中Nostr的，感觉不是很成熟，虽然这个理念比Mastodon这种更加先进，但也有不少问题。也会发生被盗用账户的情况。&lt;/p&gt;

&lt;p&gt;最近刷小红书比较多，才发现小红书的算法推荐如此严重，以前我认为算法推荐是好的，能更好的帮助你在网络上发现有共同爱好的人，发现你想关注的事物。可是我发现无论如何，最终都是广告，现在更多的是那种软广，我现在已经不敢相信任何人的分享了，潜意识里觉得他说这个东西好肯定是推销，虽然不尽如此。&lt;/p&gt;
</description><category>nostr</category></item><item><title>AI写代码体验</title><link>https://chiu.joomaen.top/posts/ai写代码体验-20241225.html</link><guid>https://chiu.joomaen.top/posts/ai写代码体验-20241225.html</guid><pubDate>Wed, 25 Dec 2024 23:34:26 +0800</pubDate><description>&lt;p&gt;这几天除了使用Cursor，我还发现了另一款AI写代码程序，叫windsurf。我两款都体验了，做了几个小工具，今天详细跟大家聊聊使用的感受吧。后面再跟大家分享下用windsurf新开发的静态博客程序。&lt;/p&gt;

&lt;p&gt;首先我先用的cursor，最开始写了几个简单的命令行工具，比如把配置文件的json和YAML相互转换，还有视频音频不同格式的转换，都是很快，基本上对话一两次就能运行了，所以AI处理这些很简单的需求是很容易的。之后我又把音视频格式转换这个程序做成了桌面端APP，有了一个图形界面，像一个简化版的格式工厂。这个步骤也没有很麻烦。&lt;/p&gt;

&lt;p&gt;再之后呢，我就想做一个类似ADGUARD home的DNS工具，后面也做出来了。像基础的缓存、指定上游、web界面、统计数据都有了。不过到后面功能一多起来，就有点力不从心了，有时候改十几次都无法修好一个问题，比如使用Redis作为DNS缓存，开始有一版能用，我是用的内置redis-server.exe来实现的，不过当我想编译到Linux版本运行在服务器上时就一直出错，不管是用WSL2还是用Ubuntu的服务器，当然我把redis-server可执行文件换成了Linux版，给了权限，就是无法启动。后面我又把Redis给去掉了。还有前端界面，我让它给我用一个柱状图和一个曲线图来展示统计数据，也搞了许久，总是无法读取到数据。&lt;/p&gt;

&lt;p&gt;反正越是复杂就越不智能，这与我在网上看到的cursor的牛逼感觉不太一样。或许因为我不会写代码，可那些一周做出app并上架的人也说自己是小白啊。&lt;/p&gt;

&lt;p&gt;在DNS那个程序一直无法按我的需求运行时，我也没有心思搞下去了。不过这时我看到了windsurf，这个也是类似cursor的魔改VSCode的东西，我安装下来，本来对它期望不大，因为许多人说cursor更好。但实际用下来才发现，windsurf在理解已有文件上比cursor好得多。我把用cursor写的文件夹导入windsurf，它可以读取项目文件，告诉我这个程序是做什么的，还能给出修改意见。于是我叫它给我做了一个静态网页，本来是想做出个人主页哪种，但我不知道应该放些什么，就索性让它再改改，做成一个静态博客。它还很贴心的告诉我如何部署到GitHub pages上，一切都很顺利。我觉得比cursor好的点是，它在修bug时可以检查所有相关联的文件从而找到问题所在，并且修改时也会同时修改有关的好几个文件。而用cursor的话，就算我一直@codebase，他也不是能从项目整体的角度来分析问题。&lt;/p&gt;

&lt;p&gt;尽管windsurf在开发上很快，基本上一个需求就对话一两次就好了，唯一一个问题，就是博客主页面的排序问题，好几次都没修好，我发现原来是它没有权限读取到编译好的output文件夹的前端文件代码，我把代码复制给它，他就一下子找到了问题并解决了。就这也没有多少次调试，比起我用一晚上cursor做不好DNS数据统计显示来说强多了。但它也没那么牛逼，我把DNS程序的代码给它看，也半天整不出来，或许是项目稍微复杂点就力不从心了。&lt;/p&gt;

&lt;p&gt;我昨天到今天做的这个静态博客程序，我打算把它作为自己博客的一个备份，一直放在GitHub，我就一切从简，只做了基本的标签和RSS功能。目前就先这样吧，后面想起什么比较必要的功能再交给AI来实现。&lt;/p&gt;

&lt;p&gt;由于cursor和windsurf都是付费软件，免费体验额度不够用，我是闲鱼合租的，不到20一个月，虽说有次数限制，不过我目前还没用超。&lt;/p&gt;
</description><category>体验分享</category></item><item><title>新版本更新</title><link>https://chiu.joomaen.top/posts/新版本更新-20241225.html</link><guid>https://chiu.joomaen.top/posts/新版本更新-20241225.html</guid><pubDate>Wed, 25 Dec 2024 21:12:42 +0800</pubDate><description>&lt;p&gt;今天修复了首页文章排列顺序异常的问题。
在创建markdown文件时头部生成一个&lt;code&gt;create_at&lt;/code&gt;字段来显示创建时间，然后&lt;code&gt;build&lt;/code&gt;时检查这个字符来排序，从新到旧。&lt;/p&gt;
</description><category>test</category></item><item><title>test-created-at</title><link>https://chiu.joomaen.top/posts/test-created-at-20241225.html</link><guid>https://chiu.joomaen.top/posts/test-created-at-20241225.html</guid><pubDate>Wed, 25 Dec 2024 21:07:55 +0800</pubDate><description>&lt;p&gt;Write your content here...&lt;/p&gt;
</description></item><item><title>test1</title><link>https://chiu.joomaen.top/posts/test1-20241225.html</link><guid>https://chiu.joomaen.top/posts/test1-20241225.html</guid><pubDate>Wed, 25 Dec 2024 20:55:41 +0800</pubDate><description>&lt;p&gt;Write your content here...&lt;/p&gt;

&lt;p&gt;第二次测试&lt;/p&gt;
</description><category>test</category></item><item><title>newtest</title><link>https://chiu.joomaen.top/posts/newtest-20241225.html</link><guid>https://chiu.joomaen.top/posts/newtest-20241225.html</guid><pubDate>Wed, 25 Dec 2024 20:41:57 +0800</pubDate><description>&lt;p&gt;Write your content here...&lt;/p&gt;

&lt;p&gt;this test file is used to check the update order.&lt;/p&gt;
</description><category>test</category></item></channel></rss>